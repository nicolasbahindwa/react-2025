@use "sass:map";
@use "../base/colors" as colors;

// Light Theme
$light-theme: (
  color-scheme: light,
  // Primary colors
  "color-text-primary": map.get(colors.$color-neutral, 900),
  "color-text-secondary": map.get(colors.$color-neutral, 700),
  "color-text-tertiary": map.get(colors.$color-neutral, 500),
  
  // Background colors
  "color-background-primary": map.get(colors.$color-neutral, 50),
  "color-background-secondary": map.get(colors.$color-neutral, 100),
  "color-background-tertiary": map.get(colors.$color-neutral, 200),
  
  // Action colors - Primary
  "color-action-primary": map.get(colors.$color-primary, 500),
  "color-action-primary-hover": map.get(colors.$color-primary, 600),
  "color-action-primary-active": map.get(colors.$color-primary, 700),
  "color-action-primary-disabled": map.get(colors.$color-neutral, 200),
  
  // Action colors - Secondary
  "color-action-secondary": map.get(colors.$color-neutral, 200),
  "color-action-secondary-hover": map.get(colors.$color-neutral, 300),
  "color-action-secondary-active": map.get(colors.$color-neutral, 400),
  "color-action-secondary-disabled": map.get(colors.$color-neutral, 100),
  
  // Action colors - Tertiary
  "color-action-tertiary": map.get(colors.$color-neutral, 100),
  "color-action-tertiary-hover": map.get(colors.$color-neutral, 200),
  "color-action-tertiary-active": map.get(colors.$color-neutral, 300),
  "color-action-tertiary-disabled": map.get(colors.$color-neutral, 50),
  
  // Button - Primary
  "button-primary-background": map.get(colors.$color-primary, 500),
  "button-primary-text": map.get(colors.$color-neutral, 50),
  "button-primary-border": transparent,
  "button-primary-hover-background": map.get(colors.$color-primary, 600),
  "button-primary-hover-text": map.get(colors.$color-neutral, 50),
  "button-primary-hover-border": transparent,
  "button-primary-active-background": map.get(colors.$color-primary, 700),
  "button-primary-active-text": map.get(colors.$color-neutral, 50),
  "button-primary-active-border": transparent,
  "button-primary-disabled-background": map.get(colors.$color-neutral, 200),
  "button-primary-disabled-text": map.get(colors.$color-neutral, 400),
  "button-primary-disabled-border": transparent,

  // Button - Secondary
  "button-secondary-background": transparent,
  "button-secondary-text": map.get(colors.$color-primary, 500),
  "button-secondary-border": map.get(colors.$color-primary, 500),
  "button-secondary-hover-background": map.get(colors.$color-primary, 50),
  "button-secondary-hover-text": map.get(colors.$color-primary, 600),
  "button-secondary-hover-border": map.get(colors.$color-primary, 600),
  "button-secondary-active-background": map.get(colors.$color-primary, 100),
  "button-secondary-active-text": map.get(colors.$color-primary, 700),
  "button-secondary-active-border": map.get(colors.$color-primary, 700),
  "button-secondary-disabled-background": transparent,
  "button-secondary-disabled-text": map.get(colors.$color-neutral, 400),
  "button-secondary-disabled-border": map.get(colors.$color-neutral, 300),

  // Button - Tertiary
  "button-tertiary-background": transparent,
  "button-tertiary-text": map.get(colors.$color-neutral, 700),
  "button-tertiary-border": transparent,
  "button-tertiary-hover-background": map.get(colors.$color-neutral, 100),
  "button-tertiary-hover-text": map.get(colors.$color-neutral, 900),
  "button-tertiary-hover-border": transparent,
  "button-tertiary-active-background": map.get(colors.$color-neutral, 200),
  "button-tertiary-active-text": map.get(colors.$color-neutral, 900),
  "button-tertiary-active-border": transparent,
  "button-tertiary-disabled-background": transparent,
  "button-tertiary-disabled-text": map.get(colors.$color-neutral, 400),
  "button-tertiary-disabled-border": transparent,


  // Borders
  "border-default": map.get(colors.$color-border, default),
  "border-strong": map.get(colors.$color-border, strong),
  "border-inverse": map.get(colors.$color-border, inverse),
  "border-focus": map.get(colors.$color-border, focus),
  "border-error": map.get(colors.$color-border, error),
  "border-success": map.get(colors.$color-border, success),


  // Status colors
  "color-text-error": map.get(colors.$color-error, 700),
  "color-text-warning": map.get(colors.$color-warning, 700),
  "color-text-success": map.get(colors.$color-success, 700),
  "color-text-info": map.get(colors.$color-info, 700),

  // Rest of your existing light theme properties...
);
:root {
  @each $key, $value in $light-theme {
    --#{$key}: #{$value};
  }
}
