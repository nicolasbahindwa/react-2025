@use "sass:map";
@use "sass:math";
@use "sass:meta";
@use "sass:string";
@use "./variables" as v;
 


// Responsive Width Utilities
$breakpoints: (
  'sm': 320px,    // mobile
  'md': 789px,    // tablet
  'lg': 1024px,   // small desktop
  'xl': 1300px    // large desktop
);

$widths: (
  'sm': 100%,     // full width for mobile
  'md': 750px,    // tablet width
  'lg': 1024px,    // small desktop width
  'xl': 1200px,   // large desktop width
  'full': 100%
);

// Generate width utility classes
@mixin generate-width-classes {
  // Base classes
  @each $size, $width in $widths {
    .w-#{$size} {
      width: $width;
    }
  }

  // Responsive classes
  @each $breakpoint, $min-width in $breakpoints {
    @media (min-width: $min-width) {
      @each $size, $width in $widths {
        .#{$breakpoint}\:w-#{$size} {
          width: $width;
        }
      }
    }
  }
}

// Usage: Include the mixin to generate the classes
@include generate-width-classes;


// icons size:
// Define a map of icon sizes
$icon-sizes: (
  'xs': 12px,
  'sm': 16px,
  'md': 24px,
  'lg': 32px,
  'xl': 48px,
  'xxl': 64px,
);

// Generate icon size classes
@each $name, $size in $icon-sizes {
  .icon-#{$name} {
    width: $size;
    height: $size;
    // Ensure icons maintain their aspect ratio
    object-fit: contain;
  }
}

// Optional: Add a class for responsive icons
.icon-responsive {
  width: 100%;
  height: auto;
}