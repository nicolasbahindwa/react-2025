@use "sass:map";
@use "../abstracts/variables" as v;
@use "../functions/functions" as f;
@use "../themes/" as *;

/* Base Input Styles */
.input {
  
  transition: border-color 0.2s ease-in-out;
  background-color: var(--color-bg-secondary);
  color: var(--color-text-primary);
  border: 1px solid var(--color-brand-secondary-light);
  width: 100%;
  
}
 
/* Size Variants */
.input-small { padding: 0.25rem 0.5rem; font-size: 0.875rem; }
.input-medium { padding: 0.5rem 0.75rem; font-size: 1rem; }
.input-large { padding: 0.75rem 1rem; font-size: 1.125rem; }

/* Shape Variants */
.input-rounded { border-radius: 0.375rem; }
.input-full-round { border-radius: 9999px; }

/* Input States */
.input:not(:disabled) {
  &:hover { border-color: var(--color-brand-primary-light); } // Fixed: Use a valid hover border color
  &:focus {
    outline: none;
    border-color: var(--color-brand-primary); // Fixed: Use a valid focus border color
    box-shadow: 0 0 0 3px rgba(var(--color-brand-primary-rgb), 0.2); // Fixed: Use a valid focus shadow
  }
}

.input:disabled {
  background-color: var(--color-bg-tertiary); // Fixed: Use a valid disabled background color
  border-color: var(--color-border-disabled); // Fixed: Use a valid disabled border color
  color: var(--color-text-disabled); // Fixed: Use a valid disabled text color
  cursor: not-allowed;
}

.input::placeholder {
  color: var(--color-text-primary); // Fixed: Use a valid placeholder color
  font-size: .8rem !important;
  opacity: 0.6;
  transition: opacity 0.2s ease-in-out;
  transition: color 0.2s ease-in-out;
  font-weight: 400;
  font-style: italic;
}

/* Error State */
.input-error {
  border-color: var(--color-error-base); // Fixed: Use a valid error color
  &:focus {
    box-shadow: 0 0 0 3px rgba(var(---color-error-base), 0.2); // Fixed: Use a valid error shadow
  }
}

/* Textarea Specific */
.textarea {
  @extend .input;
  min-height: 100px;
  resize: vertical;
}

/* Select Specific */
.select {
  @extend .input;
  padding-right: 2rem;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M6 9l6 6 6-6'%3E%3C/path%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 0.5rem center;
  background-size: var(--icon-size);
}

/* Checkbox & Radio Common Styles */
.checkbox-wrapper,
.radio-wrapper {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;

  input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
 
    &:focus + .checkbox-box,
    &:focus + .radio-circle {
      box-shadow: 0 0 0 3px rgba(var(--color-brand-primary-rgb), 0.2); // Fixed: Use a valid focus shadow
    }

    &:disabled + .checkbox-box,
    &:disabled + .radio-circle {
      background-color: var(--color-bg-tertiary); // Fixed: Use a valid disabled background color
      border-color: var(--color-border-disabled); // Fixed: Use a valid disabled border color
      cursor: not-allowed;
    }
  }
}

/* Checkbox Specific */
// .checkbox-box {
//   position: relative;
//   background-color: var(--color-bg-secondary);
//   color: var(--color-text-primary);
//   border: 1px solid var(--color-brand-secondary-light);
//   border-radius: 0.25rem;
//   transition: border-color 0.2s ease-in-out; // Fixed: Use a valid transition property
//   padding: .3rem;
//   height: 1rem;
//   width: 1rem;
//   &:checked {
//     background-color: #2a9d8f; // Custom color
//     border-color: #2a9d8f; // Optional: Match border color
//   }
//   &::after {
//     content: '';
//     position: absolute;
//     top: 50%;
//     left: 50%;
//     transform: translate(-50%, -50%);
//     background-color: var(--color-bg-secondary);
//     color: var(--color-text-primary);
//     border: 1px solid var(--color-brand-secondary-light);
//     width: 0.75rem;
//     height: 0.75rem;
//     // background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='4' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M20 6L9 17l-5-5'/%3E%3C/svg%3E");
//     opacity: 0;
//     transition: opacity 0.2s ease-in-out;
//   }
// }

// .checkbox-input:checked + .checkbox-box {
//   background-color: var(--color-bg-secondary);
//   color: var(--color-text-primary);
//   border: 1px solid var(--color-brand-secondary-light);
  
//   &::after {
//     opacity: 1;
//   }
// }

/* Container for the checkbox */
.checkbox-container {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

/* Label wrapper */
.checkbox-label {
  display: flex;
  align-items: center;
  position: relative;
  cursor: pointer;
  font-size: 1rem;
  user-select: none;
}

/* Hide the native checkbox */
.checkbox-input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Custom checkbox box */
.checkmark {
  position: relative;
  height: 1.25rem;
  width: 1.25rem;
  background-color: #eee;
  border: 1px solid #ccc;
  border-radius: 0.25rem;
  transition: background-color 0.2s, border-color 0.2s;
}

/* Hover state for the custom checkbox */
.checkbox-label:hover .checkbox-input ~ .checkmark {
  background-color: #ccc;
}

/* Checked state for the custom checkbox */
.checkbox-input:checked ~ .checkmark {
  background-color: #2196F3;
  border-color: #2196F3;
}

/* Error state for the custom checkbox */
.checkmark-error {
  border-color: #ff0000;
}

/* Checkmark (hidden by default) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
  left: 0.4375rem;
  top: 0.125rem;
  width: 0.3125rem;
  height: 0.625rem;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

/* Show the checkmark when checked */
.checkbox-input:checked ~ .checkmark:after {
  display: block;
}

/* Label text */
.checkbox-label-text {
  margin-left: 0.5rem;
}

/* Helper text */
.helperText {
  font-size: 0.875rem;
  color: #666;
  margin-top: 0.25rem;
}

/* Error message */
.input-error-label {
  font-size: 0.875rem;
  color: #ff0000;
  margin-top: 0.25rem;
}

/* Radio Specific */
.radio-circle {
  position: relative;
  width: var(--checkbox-radio-size);
  height: var(--checkbox-radio-size);
  border: 2px solid var(--color-border-primary); // Fixed: Use a valid border color
  border-radius: 50%;
  transition: border-color 0.2s ease-in-out; // Fixed: Use a valid transition property

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    width: 0.625rem;
    height: 0.625rem;
    background-color: var(--color-brand-primary); // Fixed: Use a valid checked background color
    border-radius: 50%;
    transition: transform 0.2s ease-in-out;
  }
}

.radio-input:checked + .radio-circle {
  border-color: var(--color-brand-primary); // Fixed: Use a valid checked border color
  
  &::after {
    transform: translate(-50%, -50%) scale(1);
  }
}

/* Common Label Styles */
.checkbox-label,
.radio-label {
  color: var(--color-text-primary); // Fixed: Use a valid text color
  font-size: 1rem;
  user-select: none;
}

/* Search Input */
.search-input {
  @extend .input;
  padding-left: 2.5rem;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='11' cy='11' r='8'%3E%3C/circle%3E%3Cpath d='M21 21l-4.35-4.35'%3E%3C/path%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: left 0.75rem center;
  background-size: var(--icon-size);
}

/* Input Group */
.input-group {
  display: flex;
  align-items: stretch;
  width: 100%;

  > * {
    &:not(:first-child) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    &:not(:last-child) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      border-right: none;
    }
  }
}

 